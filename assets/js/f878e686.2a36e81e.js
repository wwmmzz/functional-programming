"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[889],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),m=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=m(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=m(n),f=o,d=p["".concat(c,".").concat(f)]||p[f]||l[f]||a;return n?r.createElement(d,i(i({ref:t},s),{},{components:n})):r.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u[p]="string"==typeof e?e:o,i[1]=u;for(var m=2;m<a;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9351:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>u,toc:()=>m});var r=n(7462),o=(n(7294),n(3905));const a={},i=void 0,u={unversionedId:"quiz-answers/semigroup-commutative",id:"quiz-answers/semigroup-commutative",title:"semigroup-commutative",description:"Question",source:"@site/docs/quiz-answers/semigroup-commutative.md",sourceDirName:"quiz-answers",slug:"/quiz-answers/semigroup-commutative",permalink:"/functional-programming/quiz-answers/semigroup-commutative",draft:!1,editUrl:"https://github.com/wwmmzz/functional-programming/blob/master/website/docs/quiz-answers/semigroup-commutative.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"pattern-matching",permalink:"/functional-programming/quiz-answers/pattern-matching"},next:{title:"semigroup-concatAll-initial-value",permalink:"/functional-programming/quiz-answers/semigroup-concatAll-initial-value"}},c={},m=[{value:"Question",id:"question",level:2},{value:"Answer",id:"answer",level:2},{value:"Commutative:",id:"commutative",level:3},{value:"Not commutative:",id:"not-commutative",level:3}],s={toc:m},p="wrapper";function l(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"question"},"Question"),(0,o.kt)("p",null,"Can you find a Semigroup example where ",(0,o.kt)("inlineCode",{parentName:"p"},"concat")," is ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Commutative_property"},(0,o.kt)("strong",{parentName:"a"},"commutative"))," and one where it isn't?"),(0,o.kt)("h2",{id:"answer"},"Answer"),(0,o.kt)("h3",{id:"commutative"},"Commutative:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { Semigroup } from 'fp-ts/Semigroup'\n\nconst SemigroupSum: Semigroup<number> = {\n  concat: (first, second) => first + second\n}\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"concat(a, b) = a + b = b + a = concat(b, a)")," as the addition is commutative"),(0,o.kt)("h3",{id:"not-commutative"},"Not commutative:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { Semigroup } from 'fp-ts/Semigroup'\n\nconst first = <A>(): Semigroup<A> => ({\n  concat: (first, _second) => first\n})\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"concat(a, b) = a != concat(b, a)")))}l.isMDXComponent=!0}}]);