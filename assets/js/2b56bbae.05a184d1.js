"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[241],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>g});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=s(t),d=a,g=p["".concat(l,".").concat(d)]||p[d]||u[d]||r;return t?o.createElement(g,c(c({ref:n},m),{},{components:t})):o.createElement(g,c({ref:n},m))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,c=new Array(r);c[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[p]="string"==typeof e?e:a,c[1]=i;for(var s=2;s<r;s++)c[s]=t[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1398:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var o=t(7462),a=(t(7294),t(3905));const r={},c=void 0,i={unversionedId:"quiz-answers/option-semigroup-monoid-second",id:"quiz-answers/option-semigroup-monoid-second",title:"option-semigroup-monoid-second",description:"Question",source:"@site/docs/quiz-answers/option-semigroup-monoid-second.md",sourceDirName:"quiz-answers",slug:"/quiz-answers/option-semigroup-monoid-second",permalink:"/functional-programming/quiz-answers/option-semigroup-monoid-second",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"magma-concat-closed",permalink:"/functional-programming/quiz-answers/magma-concat-closed"},next:{title:"pattern-matching",permalink:"/functional-programming/quiz-answers/pattern-matching"}},l={},s=[{value:"Question",id:"question",level:2},{value:"Answer",id:"answer",level:2}],m={toc:s},p="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"question"},"Question"),(0,a.kt)("p",null,"It is possible to define a monoid instance for ",(0,a.kt)("inlineCode",{parentName:"p"},"Option<A>")," that behaves like that:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"x"),(0,a.kt)("th",{parentName:"tr",align:null},"y"),(0,a.kt)("th",{parentName:"tr",align:null},"concat(x, y)"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"none"),(0,a.kt)("td",{parentName:"tr",align:null},"none"),(0,a.kt)("td",{parentName:"tr",align:null},"none")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"some(a1)"),(0,a.kt)("td",{parentName:"tr",align:null},"none"),(0,a.kt)("td",{parentName:"tr",align:null},"some(a1)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"none"),(0,a.kt)("td",{parentName:"tr",align:null},"some(a2)"),(0,a.kt)("td",{parentName:"tr",align:null},"some(a2)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"some(a1)"),(0,a.kt)("td",{parentName:"tr",align:null},"some(a2)"),(0,a.kt)("td",{parentName:"tr",align:null},"some(S.concat(a1, a2))")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// the implementation is left as an exercise for the reader\ndeclare const getMonoid: <A>(S: Semigroup<A>) => Monoid<Option<A>>\n")),(0,a.kt)("p",null,"What is the ",(0,a.kt)("inlineCode",{parentName:"p"},"empty")," member for the monoid?"),(0,a.kt)("h2",{id:"answer"},"Answer"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"none")," is the empty member for our monoid because with it, all the Monoid laws are true. Let's check the monoid laws on our new monoid:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"associative")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"concat(none, concat(none, concat(none))) === concat(concat(none, none), none)\nconcat(none, concat(none, concat(some(z)))) === concat(concat(none, none), some(z))\nconcat(none, concat(some(y), concat(none))) === concat(concat(none, some(y)), none)\nconcat(none, concat(some(y), concat(some(z)))) === concat(concat(none, some(y)), some(z))\nconcat(some(x), concat(none, concat(none))) === concat(concat(some(x), none), none)\n...\nconcat(some(x), concat(some(y), concat(some(z)))) === concat(concat(some(x), some(y)), some(z))\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"right identity")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"concat(some(x), none) === some(x)\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"left identity")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"concat(none, some(x)) === some(x)\n")))}u.isMDXComponent=!0}}]);