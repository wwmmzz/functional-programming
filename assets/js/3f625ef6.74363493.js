"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[750],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),d=a,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5385:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const o={},i=void 0,c={unversionedId:"quiz-answers/magma-concat-closed",id:"quiz-answers/magma-concat-closed",title:"magma-concat-closed",description:"Question",source:"@site/docs/quiz-answers/magma-concat-closed.md",sourceDirName:"quiz-answers",slug:"/quiz-answers/magma-concat-closed",permalink:"/functional-programming/quiz-answers/magma-concat-closed",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"javascript-includes",permalink:"/functional-programming/quiz-answers/javascript-includes"},next:{title:"option-semigroup-monoid-second",permalink:"/functional-programming/quiz-answers/option-semigroup-monoid-second"}},s={},l=[{value:"Question",id:"question",level:2},{value:"Answer",id:"answer",level:2}],p={toc:l},u="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"question"},"Question"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Magma } from 'fp-ts/Magma'\n\nconst MagmaSub: Magma<number> = {\n  concat: (first, second) => first - second\n}\n")),(0,a.kt)("p",null,"The fact that ",(0,a.kt)("inlineCode",{parentName:"p"},"concat")," is a ",(0,a.kt)("em",{parentName:"p"},"closed")," operation isn't a trivial detail. If ",(0,a.kt)("inlineCode",{parentName:"p"},"A")," is the set of natural numbers (defined as positive integers) instead of the JavaScript number type (a set of positive and negative floats), could we define a ",(0,a.kt)("inlineCode",{parentName:"p"},"Magma<Natural>")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"concat")," implemented like in ",(0,a.kt)("inlineCode",{parentName:"p"},"MagmaSub"),"? Can you think of any other ",(0,a.kt)("inlineCode",{parentName:"p"},"concat")," operation on natural numbers for which the ",(0,a.kt)("inlineCode",{parentName:"p"},"closure")," property isn't valid?"),(0,a.kt)("h2",{id:"answer"},"Answer"),(0,a.kt)("p",null,"With natural numbers, the substraction operation cannot define a ",(0,a.kt)("inlineCode",{parentName:"p"},"Magma"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"a - b")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"b")," being greater than ",(0,a.kt)("inlineCode",{parentName:"p"},"a")," results in a negative number which is not a natural number."),(0,a.kt)("p",null,"Here are other examples of ",(0,a.kt)("inlineCode",{parentName:"p"},"concat")," operation on natural numbers for which the ",(0,a.kt)("inlineCode",{parentName:"p"},"closure")," property isn't valid:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"concat: (first, second) => first / second")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"concat: (first, second) => (first + second) / 2"))))}m.isMDXComponent=!0}}]);