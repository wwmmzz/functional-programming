"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[889],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),m=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=m(r),f=a,d=p["".concat(c,".").concat(f)]||p[f]||l[f]||o;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u[p]="string"==typeof e?e:a,i[1]=u;for(var m=2;m<o;m++)i[m]=r[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9351:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>u,toc:()=>m});var n=r(7462),a=(r(7294),r(3905));const o={},i=void 0,u={unversionedId:"quiz-answers/semigroup-commutative",id:"quiz-answers/semigroup-commutative",title:"semigroup-commutative",description:"Question",source:"@site/docs/quiz-answers/semigroup-commutative.md",sourceDirName:"quiz-answers",slug:"/quiz-answers/semigroup-commutative",permalink:"/functional-programming/quiz-answers/semigroup-commutative",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quiz-answers/semigroup-commutative.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"pattern-matching",permalink:"/functional-programming/quiz-answers/pattern-matching"},next:{title:"semigroup-concatAll-initial-value",permalink:"/functional-programming/quiz-answers/semigroup-concatAll-initial-value"}},c={},m=[{value:"Question",id:"question",level:2},{value:"Answer",id:"answer",level:2},{value:"Commutative:",id:"commutative",level:3},{value:"Not commutative:",id:"not-commutative",level:3}],s={toc:m},p="wrapper";function l(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"question"},"Question"),(0,a.kt)("p",null,"Can you find a Semigroup example where ",(0,a.kt)("inlineCode",{parentName:"p"},"concat")," is ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Commutative_property"},(0,a.kt)("strong",{parentName:"a"},"commutative"))," and one where it isn't?"),(0,a.kt)("h2",{id:"answer"},"Answer"),(0,a.kt)("h3",{id:"commutative"},"Commutative:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Semigroup } from 'fp-ts/Semigroup'\n\nconst SemigroupSum: Semigroup<number> = {\n  concat: (first, second) => first + second\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"concat(a, b) = a + b = b + a = concat(b, a)")," as the addition is commutative"),(0,a.kt)("h3",{id:"not-commutative"},"Not commutative:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Semigroup } from 'fp-ts/Semigroup'\n\nconst first = <A>(): Semigroup<A> => ({\n  concat: (first, _second) => first\n})\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"concat(a, b) = a != concat(b, a)")))}l.isMDXComponent=!0}}]);