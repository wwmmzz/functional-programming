"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"What is functional programming","href":"/functional-programming/","docId":"What is functional programming"},{"type":"link","label":"The two pillars of functional programming","href":"/functional-programming/The two pillars of functional programming","docId":"The two pillars of functional programming"},{"type":"link","label":"Modelling composition with Semigroups","href":"/functional-programming/Modelling composition with Semigroups","docId":"Modelling composition with Semigroups"},{"type":"link","label":"Modelling equivalence with Eq","href":"/functional-programming/Modelling equivalence with Eq","docId":"Modelling equivalence with Eq"},{"type":"link","label":"Modeling composition through Monoids","href":"/functional-programming/Modeling composition through Monoids","docId":"Modeling composition through Monoids"},{"type":"link","label":"Pure and partial functions","href":"/functional-programming/Pure and partial functions","docId":"Pure and partial functions"},{"type":"link","label":"Algebraic Data Types","href":"/functional-programming/Algebraic Data Types","docId":"Algebraic Data Types"},{"type":"link","label":"Category theory","href":"/functional-programming/Category theory","docId":"Category theory"},{"type":"link","label":"Functors","href":"/functional-programming/Functors","docId":"Functors"},{"type":"link","label":"Applicative functors","href":"/functional-programming/Applicative functors","docId":"Applicative functors"},{"type":"link","label":"Monads","href":"/functional-programming/Monads","docId":"Monads"},{"type":"category","label":"quiz-answers","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"for-loop","href":"/functional-programming/quiz-answers/for-loop","docId":"quiz-answers/for-loop"},{"type":"link","label":"javascript-includes","href":"/functional-programming/quiz-answers/javascript-includes","docId":"quiz-answers/javascript-includes"},{"type":"link","label":"magma-concat-closed","href":"/functional-programming/quiz-answers/magma-concat-closed","docId":"quiz-answers/magma-concat-closed"},{"type":"link","label":"option-semigroup-monoid-second","href":"/functional-programming/quiz-answers/option-semigroup-monoid-second","docId":"quiz-answers/option-semigroup-monoid-second"},{"type":"link","label":"pattern-matching","href":"/functional-programming/quiz-answers/pattern-matching","docId":"quiz-answers/pattern-matching"},{"type":"link","label":"semigroup-commutative","href":"/functional-programming/quiz-answers/semigroup-commutative","docId":"quiz-answers/semigroup-commutative"},{"type":"link","label":"semigroup-concatAll-initial-value","href":"/functional-programming/quiz-answers/semigroup-concatAll-initial-value","docId":"quiz-answers/semigroup-concatAll-initial-value"},{"type":"link","label":"semigroup-demo-concat","href":"/functional-programming/quiz-answers/semigroup-demo-concat","docId":"quiz-answers/semigroup-demo-concat"},{"type":"link","label":"semigroup-first","href":"/functional-programming/quiz-answers/semigroup-first","docId":"quiz-answers/semigroup-first"},{"type":"link","label":"semigroup-second","href":"/functional-programming/quiz-answers/semigroup-second","docId":"quiz-answers/semigroup-second"}]}]},"docs":{"Algebraic Data Types":{"id":"Algebraic Data Types","title":"Algebraic Data Types","description":"A good first step when writing an application or feature is to define it\'s domain model. TypeScript offers many tools that help accomplishing this task. Algebraic Data Types (in short, ADTs) are one of these tools.","sidebar":"tutorialSidebar"},"Applicative functors":{"id":"Applicative functors","title":"Applicative functors","description":"In the section regarding functors we\'ve seen that we can compose an effectful program f A) => F with a pure one g B) => C through the transformation of g to a function map(g) F) => F (if and only if F admits a functor instance).","sidebar":"tutorialSidebar"},"Category theory":{"id":"Category theory","title":"Category theory","description":"We have seen how a founding pillar of functional programming is composition.","sidebar":"tutorialSidebar"},"Functors":{"id":"Functors","title":"Functors","description":"In the last section we\'ve spoken about the TS category (the TypeScript category) and about function composition\'s core problem:","sidebar":"tutorialSidebar"},"Modeling composition through Monoids":{"id":"Modeling composition through Monoids","title":"Modeling composition through Monoids","description":"Let\'s recap what we have seen till now.","sidebar":"tutorialSidebar"},"Modelling composition with Semigroups":{"id":"Modelling composition with Semigroups","title":"Modelling composition with Semigroups","description":"A semigroup is a recipe to combine two, or more, values.","sidebar":"tutorialSidebar"},"Modelling equivalence with Eq":{"id":"Modelling equivalence with Eq","title":"Modelling equivalence with Eq","description":"Yet again, we can model the notion of equality.","sidebar":"tutorialSidebar"},"Monads":{"id":"Monads","title":"Monads","description":"(Eugenio Moggi is a professor of computer science at the University of Genoa, Italy. He first described the general use of monads to structure programs)","sidebar":"tutorialSidebar"},"Pure and partial functions":{"id":"Pure and partial functions","title":"Pure and partial functions","description":"In the first chapter we\'ve seen an informal definition of a pure function:","sidebar":"tutorialSidebar"},"quiz-answers/for-loop":{"id":"quiz-answers/for-loop","title":"for-loop","description":"Question","sidebar":"tutorialSidebar"},"quiz-answers/javascript-includes":{"id":"quiz-answers/javascript-includes","title":"javascript-includes","description":"Question","sidebar":"tutorialSidebar"},"quiz-answers/magma-concat-closed":{"id":"quiz-answers/magma-concat-closed","title":"magma-concat-closed","description":"Question","sidebar":"tutorialSidebar"},"quiz-answers/option-semigroup-monoid-second":{"id":"quiz-answers/option-semigroup-monoid-second","title":"option-semigroup-monoid-second","description":"Question","sidebar":"tutorialSidebar"},"quiz-answers/pattern-matching":{"id":"quiz-answers/pattern-matching","title":"pattern-matching","description":"Question","sidebar":"tutorialSidebar"},"quiz-answers/semigroup-commutative":{"id":"quiz-answers/semigroup-commutative","title":"semigroup-commutative","description":"Question","sidebar":"tutorialSidebar"},"quiz-answers/semigroup-concatAll-initial-value":{"id":"quiz-answers/semigroup-concatAll-initial-value","title":"semigroup-concatAll-initial-value","description":"Question","sidebar":"tutorialSidebar"},"quiz-answers/semigroup-demo-concat":{"id":"quiz-answers/semigroup-demo-concat","title":"semigroup-demo-concat","description":"Question","sidebar":"tutorialSidebar"},"quiz-answers/semigroup-first":{"id":"quiz-answers/semigroup-first","title":"semigroup-first","description":"Question","sidebar":"tutorialSidebar"},"quiz-answers/semigroup-second":{"id":"quiz-answers/semigroup-second","title":"semigroup-second","description":"Question","sidebar":"tutorialSidebar"},"The two pillars of functional programming":{"id":"The two pillars of functional programming","title":"The two pillars of functional programming","description":"Functional programming is based on the following two pillars:","sidebar":"tutorialSidebar"},"What is functional programming":{"id":"What is functional programming","title":"What is functional programming","description":"Functional Programming is programming with pure functions. Mathematical functions.","sidebar":"tutorialSidebar"}}}')}}]);